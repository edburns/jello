<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.phillip-kruger</groupId>
        <artifactId>jello</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>
    
    <groupId>com.github.phillip-kruger.jello</groupId>
    <artifactId>jello-cards</artifactId>
    
    <packaging>war</packaging>
    
    <name>Jello :: Cards</name>
    
    <properties>
        <javafaker.version>1.0.0</javafaker.version>
        <h2.version>1.4.199</h2.version>
        <surefire.version>2.22.1</surefire.version>
        
        <!-- JSF libraries -->
        <primefaces.version>7.0</primefaces.version>
        <primefaces-extensions.version>7.0.1</primefaces-extensions.version>
        <adminfaces.version>1.0.2</adminfaces.version>
        
        <!-- JCache -->
        <jcache.version>1.1.1</jcache.version>
    </properties>
    
    <dependencies>
        <!-- Used in JSF screens -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>${primefaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.primefaces.extensions</groupId>
            <artifactId>primefaces-extensions</artifactId>
            <version>${primefaces-extensions.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.github.adminfaces</groupId>
            <artifactId>admin-theme</artifactId>
            <version>${adminfaces.version}</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- JCache -->
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${jcache.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsr107.ri</groupId>
            <artifactId>cache-annotations-ri-cdi</artifactId>
            <version>${jcache.version}</version>
        </dependency>   
        <!-- We need an JCache implementation -->
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>3.12.2</version>
            <scope>runtime</scope>
        </dependency>    
        
        <!-- Apiee -->
        <dependency>
            <groupId>com.github.phillip-kruger</groupId>
            <artifactId>apiee-core</artifactId>
            <version>1.0.8</version>
        </dependency>  
                    
        <!-- Testing -->
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Java Faker -->
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>${javafaker.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <finalName>cards</finalName>
        <plugins>
            
            <!-- To run one test at a time (else port clash) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
                    </suiteXmlFiles>	
                    <properties>
                        <property>
                            <name>suitethreadpoolsize</name>
                            <value>1</value>
                        </property>
                    </properties>			
                </configuration>
            </plugin>

        </plugins>
    </build>
    
    <profiles>
        
        <profile>
            <id>portable-war</id>
            
            <build>
                <plugins>
        
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${surefire.version}</version>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>    
        </profile>
        
        <profile>
            <id>wildfly</id>
                    
            <build>
                
                <plugins>
        
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${surefire.version}</version>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>2.0.1.Final</version>    
                        <configuration>
                          <javaOpts>
                            <javaOpt>-agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n</javaOpt>
                          </javaOpts>
                          
                            <server-config>standalone-full.xml</server-config>
                            <systemProperties>
                                <jboss.tx.node.id>1</jboss.tx.node.id>
                            </systemProperties>
                            <!-- So that you can log into localhost:9990 -->
                            <add-user>
                                <users>
                                    <user>
                                        <username>admin</username>
                                        <password>admin</password>
                                        <groups>
                                            <group>admin</group>
                                        </groups>
                                    </user>
                                </users>
                            </add-user>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>                                
                            </execution>
                        </executions>
                    </plugin>    
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>openliberty</id>
            
            <properties>
                <derby.version>10.14.1.0</derby.version>
            </properties>
            
            <build>
                <resources>
                    <resource>
                        <directory>${basedir}/src/main/liberty/config</directory>
                        <targetPath>${project.build.directory}</targetPath>
                        <filtering>true</filtering>
                        <includes>
                            <include>server.xml</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>${basedir}/src/main/resources</directory>
                    </resource>
                </resources>
                
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${surefire.version}</version>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
            
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>1</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludeScope>test</excludeScope>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derby</artifactId>
                                    <version>${derby.version}</version>
                                    <type>jar</type>
                                    <outputDirectory>${project.build.directory}/derby</outputDirectory>
                                </artifactItem>
                                
                            </artifactItems>
                        </configuration>
                    </plugin>
            
                    <plugin>
                        <groupId>net.wasdev.wlp.maven.plugins</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <version>2.7</version>
                        <executions>
                            <execution>
                                <id>2</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <bootstrapProperties>
                                <httpPort>8080</httpPort>
                                <httpsPort>48080</httpsPort>
                                <app>${project.build.directory}/${project.build.finalName}.war</app>
                                <derby.driver>${project.build.directory}/derby/derby-${derby.version}.jar</derby.driver>
                            </bootstrapProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>payara</id>
            
            <properties>
                <servlet.port>8080</servlet.port>

                <payara.adminPort>4848</payara.adminPort>
                <payara.username>admin</payara.username>
                <payara.password></payara.password>
                <payara.hostname>localhost</payara.hostname>
                <payara.domainName>domain1</payara.domainName>
                <payara.home>${project.build.directory}/payara5</payara.home>
                <payara.domainDir>${payara.home}/glassfish/domains</payara.domainDir>
            </properties>
            
            <!-- Hazelcast is already included in Payara -->
            <dependencies>
                <dependency>
                    <groupId>com.hazelcast</groupId>
                    <artifactId>hazelcast</artifactId>
                    <version>3.12.2</version>
                    <scope>provided</scope>
                </dependency>    
            </dependencies>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${surefire.version}</version>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>1</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>fish.payara.distributions</groupId>
                                    <artifactId>payara</artifactId>
                                    <version>5.193</version>
                                    <type>zip</type>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.7.7</version>
                        <executions>
                            <execution>
                                <id>2</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <container>
                                <containerId>glassfish5x</containerId>
                                <type>installed</type>
                                <home>${payara.home}</home>
                            </container>
                            <configuration>
                                <type>existing</type>
                                <home>${payara.domainDir}</home>    				
                                <properties>
                                    <cargo.remote.username>${payara.username}</cargo.remote.username>
                                    <cargo.remote.password>${payara.password}</cargo.remote.password>
                                    <cargo.glassfish.admin.port>${payara.adminPort}</cargo.glassfish.admin.port>
                                    <cargo.hostname>${payara.hostname}</cargo.hostname>
                                    <cargo.glassfish.domain.name>${payara.domainName}</cargo.glassfish.domain.name>
                                </properties>
                            </configuration>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>
        
        <!-- For test cases as part of default build -->
        <profile>
            <id>arquillian</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            
            <dependencies>
                <!-- Rest client used in the test cases -->
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-binding-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                
                
                <!-- arquillian -->        
                <dependency>
                    <groupId>io.thorntail</groupId>
                    <artifactId>arquillian</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        
    </profiles>
</project>
